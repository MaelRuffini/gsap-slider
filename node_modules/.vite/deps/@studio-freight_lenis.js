// node_modules/@studio-freight/lenis/dist/lenis.mjs
function t(t2, e2) {
  for (var i2 = 0; i2 < e2.length; i2++) {
    var o2 = e2[i2];
    o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(t2, "symbol" == typeof (n2 = function(t3, e3) {
      if ("object" != typeof t3 || null === t3)
        return t3;
      var i3 = t3[Symbol.toPrimitive];
      if (void 0 !== i3) {
        var o3 = i3.call(t3, "string");
        if ("object" != typeof o3)
          return o3;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return String(t3);
    }(o2.key)) ? n2 : String(n2), o2);
  }
  var n2;
}
function e(e2, i2, o2) {
  return i2 && t(e2.prototype, i2), o2 && t(e2, o2), Object.defineProperty(e2, "prototype", { writable: false }), e2;
}
function i() {
  return i = Object.assign ? Object.assign.bind() : function(t2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var i2 = arguments[e2];
      for (var o2 in i2)
        Object.prototype.hasOwnProperty.call(i2, o2) && (t2[o2] = i2[o2]);
    }
    return t2;
  }, i.apply(this, arguments);
}
function o(t2, e2, i2) {
  return Math.max(t2, Math.min(e2, i2));
}
var n = function() {
  function t2() {
  }
  var e2 = t2.prototype;
  return e2.advance = function(t3) {
    var e3;
    if (this.isRunning) {
      var i2, n2 = false;
      if (this.lerp)
        this.value = (1 - (i2 = this.lerp)) * this.value + i2 * this.to, Math.round(this.value) === this.to && (this.value = this.to, n2 = true);
      else {
        this.currentTime += t3;
        var s2 = o(0, this.currentTime / this.duration, 1), r2 = (n2 = s2 >= 1) ? 1 : this.easing(s2);
        this.value = this.from + (this.to - this.from) * r2;
      }
      null == (e3 = this.onUpdate) || e3.call(this, this.value, { completed: n2 }), n2 && this.stop();
    }
  }, e2.stop = function() {
    this.isRunning = false;
  }, e2.fromTo = function(t3, e3, i2) {
    var o2 = i2.lerp, n2 = void 0 === o2 ? 0.1 : o2, s2 = i2.duration, r2 = void 0 === s2 ? 1 : s2, l2 = i2.easing, h2 = void 0 === l2 ? function(t4) {
      return t4;
    } : l2, a = i2.onUpdate;
    this.from = this.value = t3, this.to = e3, this.lerp = n2, this.duration = r2, this.easing = h2, this.currentTime = 0, this.isRunning = true, this.onUpdate = a;
  }, t2;
}();
function s(t2, e2) {
  var i2;
  return function() {
    var o2 = arguments, n2 = this;
    clearTimeout(i2), i2 = setTimeout(function() {
      t2.apply(n2, o2);
    }, e2);
  };
}
var r = function() {
  function t2(t3, e2) {
    var i2 = this;
    this.onWindowResize = function() {
      i2.width = window.innerWidth, i2.height = window.innerHeight;
    }, this.onWrapperResize = function() {
      i2.width = i2.wrapper.clientWidth, i2.height = i2.wrapper.clientHeight;
    }, this.onContentResize = function() {
      var t4 = i2.wrapper === window ? document.documentElement : i2.wrapper;
      i2.scrollHeight = t4.scrollHeight, i2.scrollWidth = t4.scrollWidth;
    }, this.wrapper = t3, this.content = e2, this.wrapper === window ? (window.addEventListener("resize", this.onWindowResize, false), this.onWindowResize()) : (this.wrapperResizeObserver = new ResizeObserver(s(this.onWrapperResize, 100)), this.wrapperResizeObserver.observe(this.wrapper), this.onWrapperResize()), this.contentResizeObserver = new ResizeObserver(s(this.onContentResize, 100)), this.contentResizeObserver.observe(this.content), this.onContentResize();
  }
  return t2.prototype.destroy = function() {
    var t3, e2;
    window.removeEventListener("resize", this.onWindowResize, false), null == (t3 = this.wrapperResizeObserver) || t3.disconnect(), null == (e2 = this.contentResizeObserver) || e2.disconnect();
  }, e(t2, [{ key: "limit", get: function() {
    return { x: this.scrollWidth - this.width, y: this.scrollHeight - this.height };
  } }]), t2;
}();
var l = function() {
  function t2(t3, e3) {
    var i2 = this, n2 = e3.wheelMultiplier, s2 = void 0 === n2 ? 1 : n2, r2 = e3.touchMultiplier, l2 = void 0 === r2 ? 2 : r2, h2 = e3.normalizeWheel, a = void 0 !== h2 && h2;
    this.onTouchStart = function(t4) {
      var e4 = t4.targetTouches ? t4.targetTouches[0] : t4, o2 = e4.clientY;
      i2.touchStart.x = e4.clientX, i2.touchStart.y = o2, i2.lastDelta = { x: 0, y: 0 };
    }, this.onTouchMove = function(t4) {
      var e4 = t4.targetTouches ? t4.targetTouches[0] : t4, o2 = e4.clientX, n3 = e4.clientY, s3 = -(o2 - i2.touchStart.x) * i2.touchMultiplier, r3 = -(n3 - i2.touchStart.y) * i2.touchMultiplier;
      i2.touchStart.x = o2, i2.touchStart.y = n3, i2.lastDelta = { x: s3, y: r3 }, i2.emitter.emit("scroll", { type: "touch", deltaX: s3, deltaY: r3, event: t4 });
    }, this.onTouchEnd = function(t4) {
      i2.emitter.emit("scroll", { type: "touch", inertia: true, deltaX: i2.lastDelta.x, deltaY: i2.lastDelta.y, event: t4 });
    }, this.onWheel = function(t4) {
      var e4 = t4.deltaX, n3 = t4.deltaY;
      i2.normalizeWheel && (e4 = o(-100, e4, 100), n3 = o(-100, n3, 100)), i2.emitter.emit("scroll", { type: "wheel", deltaX: e4 *= i2.wheelMultiplier, deltaY: n3 *= i2.wheelMultiplier, event: t4 });
    }, this.element = t3, this.wheelMultiplier = s2, this.touchMultiplier = l2, this.normalizeWheel = a, this.touchStart = { x: null, y: null }, this.emitter = { events: {}, emit: function(t4) {
      for (var e4 = this.events[t4] || [], i3 = 0, o2 = e4.length; i3 < o2; i3++)
        e4[i3].apply(e4, [].slice.call(arguments, 1));
    }, on: function(t4, e4) {
      var i3, o2 = this;
      return (null == (i3 = this.events[t4]) ? void 0 : i3.push(e4)) || (this.events[t4] = [e4]), function() {
        var i4;
        o2.events[t4] = null == (i4 = o2.events[t4]) ? void 0 : i4.filter(function(t5) {
          return e4 !== t5;
        });
      };
    } }, this.element.addEventListener("wheel", this.onWheel, { passive: false }), this.element.addEventListener("touchstart", this.onTouchStart, { passive: false }), this.element.addEventListener("touchmove", this.onTouchMove, { passive: false }), this.element.addEventListener("touchend", this.onTouchEnd, { passive: false });
  }
  var e2 = t2.prototype;
  return e2.on = function(t3, e3) {
    return this.emitter.on(t3, e3);
  }, e2.destroy = function() {
    this.emitter.events = {}, this.element.removeEventListener("wheel", this.onWheel, { passive: false }), this.element.removeEventListener("touchstart", this.onTouchStart, { passive: false }), this.element.removeEventListener("touchmove", this.onTouchMove, { passive: false }), this.element.removeEventListener("touchend", this.onTouchEnd, { passive: false });
  }, t2;
}();
var h = function() {
  function t2(t3) {
    var e2 = this, o2 = void 0 === t3 ? {} : t3, s3 = o2.direction, h2 = o2.gestureDirection, a = o2.mouseMultiplier, c = o2.smooth, u = o2.wrapper, p = void 0 === u ? window : u, d = o2.content, v = void 0 === d ? document.documentElement : d, m = o2.wheelEventsTarget, f = void 0 === m ? p : m, g = o2.smoothWheel, w = void 0 === g ? null == c || c : g, S = o2.smoothTouch, y = void 0 !== S && S, T = o2.syncTouch, z = void 0 !== T && T, b = o2.syncTouchLerp, M = void 0 === b ? 0.1 : b, E = o2.touchInertiaMultiplier, L = void 0 === E ? 35 : E, W = o2.duration, R = o2.easing, O = void 0 === R ? function(t4) {
      return Math.min(1, 1.001 - Math.pow(2, -10 * t4));
    } : R, _ = o2.lerp, k = void 0 === _ ? W ? null : 0.1 : _, x = o2.infinite, H = void 0 !== x && x, D = o2.orientation, j = void 0 === D ? null != s3 ? s3 : "vertical" : D, X = o2.gestureOrientation, Y = void 0 === X ? null != h2 ? h2 : "vertical" : X, C = o2.touchMultiplier, P = void 0 === C ? 1 : C, U = o2.wheelMultiplier, A = void 0 === U ? null != a ? a : 1 : U, I = o2.normalizeWheel, V = void 0 !== I && I;
    this.onVirtualScroll = function(t4) {
      var o3 = t4.type, n2 = t4.inertia, s4 = t4.deltaX, r2 = t4.deltaY, l2 = t4.event;
      if (!l2.ctrlKey) {
        var h3 = "touch" === o3, a2 = "wheel" === o3;
        if (!("vertical" === e2.options.gestureOrientation && 0 === r2 || "horizontal" === e2.options.gestureOrientation && 0 === s4 || h3 && "vertical" === e2.options.gestureOrientation && 0 === e2.scroll && !e2.options.infinite && r2 <= 0 || l2.composedPath().find(function(t5) {
          return null == t5 || null == t5.hasAttribute ? void 0 : t5.hasAttribute("data-lenis-prevent");
        })))
          if (e2.isStopped || e2.isLocked)
            l2.preventDefault();
          else {
            if (e2.isSmooth = (e2.options.smoothTouch || e2.options.syncTouch) && h3 || e2.options.smoothWheel && a2, !e2.isSmooth)
              return e2.isScrolling = false, void e2.animate.stop();
            l2.preventDefault();
            var c2 = r2;
            "both" === e2.options.gestureOrientation ? c2 = Math.abs(r2) > Math.abs(s4) ? r2 : s4 : "horizontal" === e2.options.gestureOrientation && (c2 = s4);
            var u2 = h3 && e2.options.syncTouch, p2 = h3 && n2 && Math.abs(c2) > 1;
            p2 && (c2 = e2.velocity * e2.options.touchInertiaMultiplier), e2.scrollTo(e2.targetScroll + c2, i({ programmatic: false }, u2 && { lerp: p2 ? e2.syncTouchLerp : 0.4 }));
          }
      }
    }, this.onScroll = function() {
      if (!e2.isScrolling) {
        var t4 = e2.animatedScroll;
        e2.animatedScroll = e2.targetScroll = e2.actualScroll, e2.velocity = 0, e2.direction = Math.sign(e2.animatedScroll - t4), e2.emit();
      }
    }, s3 && console.warn("Lenis: `direction` option is deprecated, use `orientation` instead"), h2 && console.warn("Lenis: `gestureDirection` option is deprecated, use `gestureOrientation` instead"), a && console.warn("Lenis: `mouseMultiplier` option is deprecated, use `wheelMultiplier` instead"), c && console.warn("Lenis: `smooth` option is deprecated, use `smoothWheel` instead"), window.lenisVersion = "1.0.10", p !== document.documentElement && p !== document.body || (p = window), this.options = { wrapper: p, content: v, wheelEventsTarget: f, smoothWheel: w, smoothTouch: y, syncTouch: z, syncTouchLerp: M, touchInertiaMultiplier: L, duration: W, easing: O, lerp: k, infinite: H, gestureOrientation: Y, orientation: j, touchMultiplier: P, wheelMultiplier: A, normalizeWheel: V }, this.dimensions = new r(p, v), this.rootElement.classList.add("lenis"), this.velocity = 0, this.isStopped = false, this.isSmooth = w || y, this.isScrolling = false, this.targetScroll = this.animatedScroll = this.actualScroll, this.animate = new n(), this.emitter = { events: {}, emit: function(t4) {
      for (var e3 = this.events[t4] || [], i2 = 0, o3 = e3.length; i2 < o3; i2++)
        e3[i2].apply(e3, [].slice.call(arguments, 1));
    }, on: function(t4, e3) {
      var i2, o3 = this;
      return (null == (i2 = this.events[t4]) ? void 0 : i2.push(e3)) || (this.events[t4] = [e3]), function() {
        var i3;
        o3.events[t4] = null == (i3 = o3.events[t4]) ? void 0 : i3.filter(function(t5) {
          return e3 !== t5;
        });
      };
    } }, this.options.wrapper.addEventListener("scroll", this.onScroll, { passive: false }), this.virtualScroll = new l(f, { touchMultiplier: P, wheelMultiplier: A, normalizeWheel: V }), this.virtualScroll.on("scroll", this.onVirtualScroll);
  }
  var s2 = t2.prototype;
  return s2.destroy = function() {
    this.emitter.events = {}, this.options.wrapper.removeEventListener("scroll", this.onScroll, { passive: false }), this.virtualScroll.destroy();
  }, s2.on = function(t3, e2) {
    return this.emitter.on(t3, e2);
  }, s2.off = function(t3, e2) {
    var i2;
    this.emitter.events[t3] = null == (i2 = this.emitter.events[t3]) ? void 0 : i2.filter(function(t4) {
      return e2 !== t4;
    });
  }, s2.setScroll = function(t3) {
    this.isHorizontal ? this.rootElement.scrollLeft = t3 : this.rootElement.scrollTop = t3;
  }, s2.emit = function() {
    this.emitter.emit("scroll", this);
  }, s2.reset = function() {
    this.isLocked = false, this.isScrolling = false, this.velocity = 0, this.animate.stop();
  }, s2.start = function() {
    this.isStopped = false, this.reset();
  }, s2.stop = function() {
    this.isStopped = true, this.animate.stop(), this.reset();
  }, s2.raf = function(t3) {
    var e2 = t3 - (this.time || t3);
    this.time = t3, this.animate.advance(1e-3 * e2);
  }, s2.scrollTo = function(t3, e2) {
    var i2 = this, n2 = void 0 === e2 ? {} : e2, s3 = n2.offset, r2 = void 0 === s3 ? 0 : s3, l2 = n2.immediate, h2 = void 0 !== l2 && l2, a = n2.lock, c = void 0 !== a && a, u = n2.duration, p = void 0 === u ? this.options.duration : u, d = n2.easing, v = void 0 === d ? this.options.easing : d, m = n2.lerp, f = void 0 === m ? !p && this.options.lerp : m, g = n2.onComplete, w = void 0 === g ? null : g, S = n2.force, y = n2.programmatic, T = void 0 === y || y;
    if (!this.isStopped || void 0 !== S && S) {
      if (["top", "left", "start"].includes(t3))
        t3 = 0;
      else if (["bottom", "right", "end"].includes(t3))
        t3 = this.limit;
      else {
        var z, b;
        if ("string" == typeof t3 ? b = document.querySelector(t3) : null != (z = t3) && z.nodeType && (b = t3), b) {
          if (this.options.wrapper !== window) {
            var M = this.options.wrapper.getBoundingClientRect();
            r2 -= this.isHorizontal ? M.left : M.top;
          }
          var E = b.getBoundingClientRect();
          t3 = (this.isHorizontal ? E.left : E.top) + this.animatedScroll;
        }
      }
      if ("number" == typeof t3) {
        if (t3 += r2, this.options.infinite ? T && (this.targetScroll = this.animatedScroll = this.scroll) : t3 = o(0, t3, this.limit), h2)
          return this.animatedScroll = this.targetScroll = t3, this.setScroll(this.scroll), this.reset(), this.emit(), void (null == w || w());
        if (!T) {
          if (t3 === this.targetScroll)
            return;
          this.targetScroll = t3;
        }
        this.animate.fromTo(this.animatedScroll, t3, { duration: p, easing: v, lerp: f, onUpdate: function(t4, e3) {
          var o2 = e3.completed;
          c && (i2.isLocked = true), i2.isScrolling = true, i2.velocity = t4 - i2.animatedScroll, i2.direction = Math.sign(i2.velocity), i2.animatedScroll = t4, i2.setScroll(i2.scroll), T && (i2.targetScroll = t4), o2 && (c && (i2.isLocked = false), requestAnimationFrame(function() {
            i2.isScrolling = false;
          }), i2.velocity = 0, null == w || w()), i2.emit();
        } });
      }
    }
  }, e(t2, [{ key: "rootElement", get: function() {
    return this.options.wrapper === window ? this.options.content : this.options.wrapper;
  } }, { key: "limit", get: function() {
    return this.isHorizontal ? this.dimensions.limit.x : this.dimensions.limit.y;
  } }, { key: "isHorizontal", get: function() {
    return "horizontal" === this.options.orientation;
  } }, { key: "actualScroll", get: function() {
    return this.isHorizontal ? this.rootElement.scrollLeft : this.rootElement.scrollTop;
  } }, { key: "scroll", get: function() {
    return this.options.infinite ? (e2 = this.animatedScroll % (t3 = this.limit), (t3 > 0 && e2 < 0 || t3 < 0 && e2 > 0) && (e2 += t3), e2) : this.animatedScroll;
    var t3, e2;
  } }, { key: "progress", get: function() {
    return 0 === this.limit ? 1 : this.scroll / this.limit;
  } }, { key: "isSmooth", get: function() {
    return this.__isSmooth;
  }, set: function(t3) {
    this.__isSmooth !== t3 && (this.rootElement.classList.toggle("lenis-smooth", t3), this.__isSmooth = t3);
  } }, { key: "isScrolling", get: function() {
    return this.__isScrolling;
  }, set: function(t3) {
    this.__isScrolling !== t3 && (this.rootElement.classList.toggle("lenis-scrolling", t3), this.__isScrolling = t3);
  } }, { key: "isStopped", get: function() {
    return this.__isStopped;
  }, set: function(t3) {
    this.__isStopped !== t3 && (this.rootElement.classList.toggle("lenis-stopped", t3), this.__isStopped = t3);
  } }]), t2;
}();

// dep:@studio-freight_lenis
var studio_freight_lenis_default = h;
export {
  studio_freight_lenis_default as default
};
//# sourceMappingURL=@studio-freight_lenis.js.map
